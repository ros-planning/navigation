#!/usr/bin/env python
# Static Object Speed Limiter configuration

from dynamic_reconfigure.parameter_generator_catkin import ParameterGenerator, double_t, int_t, bool_t
gen = ParameterGenerator()

gen.add("enabled", bool_t, 0, "Is this speed limiter enabled for the current chuck.", False)
gen.add("timeout", double_t, 0, "Time out old speed limits after this amount of time.  Negative value is no timeout [s]", 0.25, -1, 10)

gen.add("min_linear_velocity", double_t, 0, "The minimum desired linear velocity for the robot. [m/s]", 0.3, 0, 2.0)
gen.add("min_angular_velocity", double_t, 0, "The minimum desired angular velocity for the robot. [rad/s]", 0.4, 0, 2.0)

gen.add("test_distance_changes_with_speed", bool_t, 0, "Should the test size take speed into consideraion", True)
gen.add("test_distance_grows_with_speed", bool_t, 0, "Should the test size increase as the speed goes up, false indicates it should grow with decreases in speed", True)

gen.add("min_linear_velocity_test_speed", double_t, 0, "The minimum linear velocity to test against. [m/s]", 0.3, 0, 2.0)
gen.add("max_linear_velocity_test_speed", double_t, 0, "The maximum linear velocity to test against. [m/s]", 1.35, 0, 2.0)
gen.add("min_angular_velocity_test_speed", double_t, 0, "The minimum angular velocity to test against. [rad/s]", 0.1, 0, 2.0)
gen.add("max_angular_velocity_test_speed", double_t, 0, "The maximum angular velocity to test against. [rad/s]", 0.8, 0, 2.0)

gen.add("min_linear_velocity_distance", double_t, 0, "The minimum linear velocity probe size to use to see if static objects effect the robot. [m]", 0.05, 0, 5.0)
gen.add("max_linear_velocity_distance", double_t, 0, "The maximum linear velocity probe size to use to see if static objects effect the robot. [m]", 0.5, 0, 5.0)
gen.add("min_angular_velocity_distance", double_t, 0, "The minimum angular velocity probe size to use to see if static objects effect the robot. [m]", 0.05, 0, 5.0)
gen.add("max_angular_velocity_distance", double_t, 0, "The maximum angular velocity probe size to use to see if static objects effect the robot. [m]", 0.5, 0, 5.0)

gen.add("min_linear_velocity_reduction", double_t, 0, "The minimum amount to reduce the linear velocity when objects are detected. [m/s]", 0.05, 0, 2.0)
gen.add("max_linear_velocity_reduction", double_t, 0, "The maximum amount to reduce the linear velocity when objects are detected. [m/s]", 0.4, 0, 2.0)
gen.add("min_angular_velocity_reduction", double_t, 0, "The minimum amount to reduce the angular velocity when objects are detected. [rad/s]", 0.05, 0, 2.0)
gen.add("max_angular_velocity_reduction", double_t, 0, "The maximum amount to reduce the angular velocity when objects are detected. [rad/s]", 0.3, 0, 2.0)

exit(gen.generate("base_local_planner", "base_local_planner", "StaticObjectSpeedLimiter"))
